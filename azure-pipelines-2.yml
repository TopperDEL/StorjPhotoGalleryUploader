# Xamarin.iOS

# Build a Xamarin.iOS project.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- release

pool:
  vmImage: 'macos-latest'

steps:
# To manually select a Xamarin SDK version on the Microsoft-hosted macOS agent,
# configure this task with the *Mono* version that is associated with the
# Xamarin SDK version that you need, and set the "enabled" property to true.
# See https://go.microsoft.com/fwlink/?linkid=871629
- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
  displayName: 'Select the Xamarin SDK version'
  enabled: false

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*iOs.sln'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'iOs2022.p12'
    certPwd: '$(iOsCertificatePassword)'
    keychain: 'temp'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'StorjPhotoGalleryUploaderiOs.mobileprovision'

- task: ios-bundle-version@1
  inputs:
    sourcePath: 'StorjPhotoGalleryUploader.iOS/Info.plist'
    versionCodeOption: 'buildid'
    versionCode: '$(Build.BuildId)'
    printFile: true

- task: XamariniOS@2
  inputs:
    solutionFile: '**/*iOs.sln'
    configuration: 'AppStore'
    buildForSimulator: false
    packageApp: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.ipa'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'ios_storeupload_drop'
    publishLocation: 'Container'