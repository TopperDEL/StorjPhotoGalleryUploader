# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- development

pool:
  vmImage: 'macos-latest'

steps:
# To manually select a Xamarin SDK version on the Microsoft-hosted macOS agent,
# configure this task with the *Mono* version that is associated with the
# Xamarin SDK version that you need, and set the "enabled" property to true.
# See https://go.microsoft.com/fwlink/?linkid=871629
- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
  displayName: 'Select the Xamarin SDK version'
  enabled: false

- task: NuGetToolInstaller@1

- task: Bash@3
  displayName: Remove UAP-TargetFrameworks (uap10.0.18362)
  inputs:
    targetType: 'inline'
    script: |
      # Remove UAP-TargetFrameworks
      sed -i 's/;uap10.0.18362//' StorjPhotoGalleryUploader.Uno.Contracts/StorjPhotoGalleryUploader.Uno.Contracts.csproj
      sed -i 's/;uap10.0.18362//' StorjPhotoGalleryUploader.Uno.Services/StorjPhotoGalleryUploader.Uno.Services.csproj

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*iOs.sln'

- task: ios-bundle-version@1
  inputs:
    sourcePath: 'StorjPhotoGalleryUploader.iOS/Info.plist'
    versionCodeOption: 'buildid'
    versionCode: '$(Build.BuildId)'
    printFile: true

- task: XamariniOS@2
  inputs:
    solutionFile: '**/*iOs.sln'
    configuration: 'Release'
    buildForSimulator: true
    packageApp: false
